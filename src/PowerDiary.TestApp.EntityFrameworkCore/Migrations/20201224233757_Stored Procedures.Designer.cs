// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerDiary.TestApp.EntityFrameworkCore;

namespace PowerDiary.TestApp.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(TestAppDbContext))]
    [Migration("20201224233757_Stored Procedures")]
    partial class StoredProcedures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PowerDiary.TestApp.Core.ChatEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChatEventTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("User1Id")
                        .HasColumnType("int");

                    b.Property<int?>("User2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatEventTypeId");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Message");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("ChatEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatEventTypeId = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 1
                        },
                        new
                        {
                            Id = 2,
                            ChatEventTypeId = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 5, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 2
                        },
                        new
                        {
                            Id = 3,
                            ChatEventTypeId = 3,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 15, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Message = "Hey, Kate - high five?",
                            User1Id = 1
                        },
                        new
                        {
                            Id = 4,
                            ChatEventTypeId = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 17, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 2,
                            User2Id = 1
                        },
                        new
                        {
                            Id = 5,
                            ChatEventTypeId = 2,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 18, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 1
                        },
                        new
                        {
                            Id = 6,
                            ChatEventTypeId = 3,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 20, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Message = "Oh, typical",
                            User1Id = 2
                        },
                        new
                        {
                            Id = 7,
                            ChatEventTypeId = 2,
                            CreatedDate = new DateTime(2020, 12, 24, 17, 21, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 2
                        },
                        new
                        {
                            Id = 8,
                            ChatEventTypeId = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 2
                        },
                        new
                        {
                            Id = 9,
                            ChatEventTypeId = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 5, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 3
                        },
                        new
                        {
                            Id = 10,
                            ChatEventTypeId = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 10, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 4
                        },
                        new
                        {
                            Id = 11,
                            ChatEventTypeId = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 15, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 1,
                            User2Id = 2
                        },
                        new
                        {
                            Id = 12,
                            ChatEventTypeId = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 20, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 2,
                            User2Id = 3
                        },
                        new
                        {
                            Id = 13,
                            ChatEventTypeId = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 25, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            User1Id = 3,
                            User2Id = 4
                        },
                        new
                        {
                            Id = 14,
                            ChatEventTypeId = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 18, 24, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            User1Id = 3,
                            User2Id = 1
                        });
                });

            modelBuilder.Entity("PowerDiary.TestApp.Core.ChatEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChatEventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Enter the room",
                            Name = "enter-the-room"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Leave the room",
                            Name = "leave-the-room"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Comment",
                            Name = "comment"
                        },
                        new
                        {
                            Id = 4,
                            Description = "High-five another user",
                            Name = "high-five-another-user"
                        });
                });

            modelBuilder.Entity("PowerDiary.TestApp.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 12, 24, 23, 37, 56, 805, DateTimeKind.Utc).AddTicks(7220),
                            IsActive = true,
                            Username = "Bob"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 12, 24, 23, 37, 56, 805, DateTimeKind.Utc).AddTicks(8484),
                            IsActive = true,
                            Username = "Kate"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 12, 24, 23, 37, 56, 805, DateTimeKind.Utc).AddTicks(8487),
                            IsActive = true,
                            Username = "Alice"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 12, 24, 23, 37, 56, 805, DateTimeKind.Utc).AddTicks(8488),
                            IsActive = true,
                            Username = "John"
                        });
                });

            modelBuilder.Entity("PowerDiary.TestApp.Core.ChatEvent", b =>
                {
                    b.HasOne("PowerDiary.TestApp.Core.ChatEventType", "ChatEventType")
                        .WithMany()
                        .HasForeignKey("ChatEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerDiary.TestApp.Core.User", "User1")
                        .WithMany()
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PowerDiary.TestApp.Core.User", "User2")
                        .WithMany()
                        .HasForeignKey("User2Id");

                    b.Navigation("ChatEventType");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });
#pragma warning restore 612, 618
        }
    }
}
